name: Render all Markdown docs to HTML + TOC

on:
  push:
    branches: [ main ]
    paths:
      - '**.md'
      - '.github/workflows/render-docs.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Ensure docs dir & assets
        run: |
          mkdir -p docs
          # Minimal CSS (only if missing)
          if [ ! -f docs/_style.css ]; then
            cat > docs/_style.css <<'CSS'
            body { margin: 2rem auto; max-width: 920px; padding: 0 1rem;
                   font: 16px/1.6 system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }
            pre, code { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace; }
            nav { display:flex; gap:.75rem; flex-wrap:wrap; margin: 0 0 1rem; }
            nav a { text-decoration: none; }
            hr { border: none; border-top: 1px solid #ddd; margin: 1.25rem 0; }
            .meta { color:#666; font-size:.9rem; margin-bottom:1rem; }
            main img { max-width: 100%; height: auto; }
            CSS
          fi

          # Header/Footer (create once; won't overwrite if you edit later)
          if [ ! -f docs/_header.html ]; then
            cat > docs/_header.html <<'HTML'
            <header>
              <nav>
                <a href="./index.html">Home</a> ·
                <a href="./docs.html">Docs</a> ·
                <a href="https://github.com/UserlandAlchemist/theatre-of-the-mind">GitHub</a>
              </nav>
              <div class="meta">Theatre of the Mind — static docs generated by GitHub Actions (pandoc)</div>
              <hr>
            </header>
            <main>
            HTML
          fi

          if [ ! -f docs/_footer.html ]; then
            cat > docs/_footer.html <<'HTML'
            </main>
            <hr>
            <footer>
              <p><small>© <span id="y"></span> Theatre of the Mind. All rights reserved.</small></p>
              <script>document.getElementById('y').textContent = new Date().getFullYear()</script>
            </footer>
            HTML
          fi

      - name: Render README -> docs/index.html
        run: |
          pandoc README.md \
            --from=gfm --to=html5 --standalone \
            --metadata title="Theatre of the Mind" \
            --toc --toc-depth=3 \
            --include-before-body=docs/_header.html \
            --include-after-body=docs/_footer.html \
            --css _style.css \
            -o docs/index.html

      - name: Render every docs/*.md -> docs/*.html
        run: |
          shopt -s nullglob
          for file in docs/*.md; do
            base=$(basename "$file" .md)
            pandoc "$file" \
              --from=gfm --to=html5 --standalone \
              --metadata title="$base — Theatre of the Mind" \
              --toc --toc-depth=3 \
              --include-before-body=docs/_header.html \
              --include-after-body=docs/_footer.html \
              --css _style.css \
              -o "docs/$base.html"
          done

      - name: Build docs/_toc.html and docs/docs.html
        run: |
          # Build a simple HTML TOC for all docs/*.md (sorted by name)
          {
            echo "<ul>"
            for file in $(ls -1 docs/*.md 2>/dev/null | sort); do
              base=$(basename "$file" .md)
              # Extract first H1 as the title; fallback to filename
              title=$(grep -m1 -E '^[[:space:]]*# ' "$file" | sed 's/^[[:space:]]*#\s*//')
              if [ -z "$title" ]; then title="$base"; fi
              echo "<li><a href=\"./$base.html\">$title</a></li>"
            done
            echo "</ul>"
          } > docs/_toc.html

          # Wrap TOC into a docs.html page with header/footer includes
          {
            cat docs/_header.html
            echo "<h1>Documentation</h1>"
            cat docs/_toc.html
            cat docs/_footer.html
          } > docs/docs.html

      - name: Commit generated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'docs: auto-render Markdown + generate docs index (TOC)'
          file_pattern: |
            docs/*.html
            docs/_toc.html
            docs/_style.css
            docs/_header.html
            docs/_footer.html
